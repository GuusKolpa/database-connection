version: '3.8'

services:
  app:
    image: dbconn:latest  # Use a common image name
    build:
      context: .
      target: production
    ports:
      - "5000:5000"
    env_file:
      - .env/.env.production
    environment:
      - DB_HOST=host.docker.internal  # Special DNS name to access host machine
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: on-failure:3  # Ensure it restarts if it stops

  dev:
    image: dbconn-dev:latest  # Separate image for development
    build:
      context: .
      target: development
    ports:
      - "5000:5000"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules  # This ensures node_modules isn't overwritten
    env_file:
      - .env/.env.development
    environment:
      - DB_HOST=host.docker.internal  # Special DNS name to access host machine
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: npm run dev
    restart: unless-stopped

  test:
    image: dbconn-test:latest  # Separate image for testing
    build:
      context: .
      target: test
    env_file:
      - .env/.env.test
    environment:
      - DB_HOST=host.docker.internal  # Special DNS name to access host machine
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: npm test